{
  "metadata": {
    "url": "https://www.asyncapi.com/docs/concepts/asyncapi-document/reply-info",
    "timestamp": "2025-03-12T17:48:15.254Z",
    "source": "asyncapi_docs"
  },
  "content": {
    "title": "Reply Info",
    "hierarchy": {
      "sections": {
        "Dynamic response channel": {
          "level": 2,
          "content": "There are situations where you do not know the reply channel at the design time. Instead, the reply address is dynamically determined at runtime, based on factors such as the request message payload or header.In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel.For instance, this pattern allows the replier to direct its response to a specific channel as defined by the requestor. This is typically achieved by including a replyTo property in the request header. The requestor specifies this property to indicate where it expects to receive the response, guiding the communication flow in a structured and predictable manner.1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example for a requester with a dynamic reply channel\n5  version: 1.0.0\n6  description: Example with a requester that initiates a request/reply interaction, with the response directed to the destination specified in the request's `replyTo` header.\n7\n8channels:\n9  ping:\n10    address: /ping\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: null\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      address:\n27        description: The response destination is dynamically set according to the `replyTo` field in the request header\n28        location: \"$message.header#/replyTo\"\n29      channel: \n30        $ref: '#/channels/pong'"
        },
        "Multiple channels with single message when reply address is known": {
          "level": 2,
          "content": "The request/reply pattern can also be implemented over multiple channels with a single message. You can do this by specifying multiple channels with a single message and specifying the same address for both the requester and the replier.Here's an example of setting up both the requestor and replier over the same address:1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example with requester over the same channel\n5  version: 1.0.0\n6  description: Requester example initiating a request-reply interaction, utilizing the same channel for both sending the request and receiving the reply.\n7\n8channels:\n9  ping:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: /\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      channel: \n27        $ref: '#/channels/pong'"
        },
        "Multiple messages over the same channel when reply address is known": {
          "level": 2,
          "content": "In some cases, representing the same information might require a different approach. You can do so by specifying multiple messages under the same channel. In such scenarios, use the messages property in the Operation object to explicitly define which message among the multiple messages available over the same channel is a request and which is a reply.Consider an example where multiple messages are transmitted over a single channel, all sharing the same address. In this setup, the Operation object is utilized to distinctly specify which of these messages serves as the request and which functions as the reply:1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example when a channel contains multiple messages\n5  version: 1.0.0\n6  description: Requester example that initiates the request-reply pattern within a root channel that contains multiple messages\n7\n8channels:\n9  rootChannel:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14      pong:\n15        $ref: '#/components/messages/pong'\n16\n17operations:\n18  pingRequest:\n19    action: send\n20    channel: \n21      $ref: '#/channels/rootChannel'\n22    messages:\n23      - $ref: \"/components/messages/ping\"\n24    reply:\n25      messages:\n26        - $ref: \"/components/messages/pong\"\n27      channel: \n28        $ref: '#/channels/rootChannel'"
        }
      },
      "navigation": [
        {
          "text": "Welcome",
          "href": "https://www.asyncapi.com/docs",
          "subItems": []
        },
        {
          "text": "Concepts",
          "href": "https://www.asyncapi.com/docs/concepts",
          "subItems": [
            {
              "text": "Overview",
              "href": "https://www.asyncapi.com/docs/concepts"
            },
            {
              "text": "Server",
              "href": "https://www.asyncapi.com/docs/concepts/server"
            },
            {
              "text": "Producer",
              "href": "https://www.asyncapi.com/docs/concepts/producer"
            },
            {
              "text": "Consumer",
              "href": "https://www.asyncapi.com/docs/concepts/consumer"
            },
            {
              "text": "Channel",
              "href": "https://www.asyncapi.com/docs/concepts/channel"
            },
            {
              "text": "Application",
              "href": "https://www.asyncapi.com/docs/concepts/application"
            },
            {
              "text": "Protocol",
              "href": "https://www.asyncapi.com/docs/concepts/protocol"
            },
            {
              "text": "Message",
              "href": "https://www.asyncapi.com/docs/concepts/message"
            },
            {
              "text": "AsyncAPI Document",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document"
            },
            {
              "text": "Introduction",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document"
            },
            {
              "text": "AsyncAPI document structure",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/structure"
            },
            {
              "text": "Tags",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/tags"
            },
            {
              "text": "Adding channels",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/adding-channels"
            },
            {
              "text": "Parameters in channel address",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/dynamic-channel-address"
            },
            {
              "text": "Adding operations",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/adding-operations"
            },
            {
              "text": "Operation security",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/securing-operations"
            },
            {
              "text": "Adding messages",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/adding-messages"
            },
            {
              "text": "Reusability with traits",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/reusability-with-traits"
            },
            {
              "text": "Server security",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/server-security"
            },
            {
              "text": "Adding reply info",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/reply-info"
            },
            {
              "text": "Extending specification",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/extending-specification"
            },
            {
              "text": "Adding bindings",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/adding-bindings"
            },
            {
              "text": "Payload schema",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/define-payload"
            },
            {
              "text": "Server variables",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/variable-url"
            },
            {
              "text": "Reusable parts",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/reusable-parts"
            },
            {
              "text": "Add servers",
              "href": "https://www.asyncapi.com/docs/concepts/asyncapi-document/add-server"
            }
          ]
        },
        {
          "text": "Tutorials",
          "href": "https://www.asyncapi.com/docs/tutorials",
          "subItems": []
        },
        {
          "text": "Tools",
          "href": "https://www.asyncapi.com/docs/tools",
          "subItems": []
        },
        {
          "text": "Guides",
          "href": "https://www.asyncapi.com/docs/guides",
          "subItems": []
        },
        {
          "text": "Reference",
          "href": "https://www.asyncapi.com/docs/reference",
          "subItems": []
        },
        {
          "text": "Migrations",
          "href": "https://www.asyncapi.com/docs/migration",
          "subItems": []
        },
        {
          "text": "Community",
          "href": "https://www.asyncapi.com/docs/community",
          "subItems": []
        }
      ]
    },
    "full_text": "Request/Reply is a communication pattern where one entity, the 'requestor,' sends a message to another, the 'replier', and waits for a response. Such a pattern is used when a component (or service) needs to initiate an action and receive a specific response in return, either synchronously or asynchronously. In Event-Driven Architectures, this communication pattern is asynchronous, meaning that the requester does not block and wait for an immediate response. Instead, it can continue processing other tasks or even send out other requests while waiting for the reply to arrive.\nIn the case of multiple requests made, each request is processed independently and sends the reply/response to the corresponding requestor when ready.\nHere is diagram to illustrate the working of a basic request/reply pattern:\n#mermaid-0{font-family:Inter,sans-serif;font-size:18px;fill:#242929;}#mermaid-0 .error-icon{fill:#F7F9FA;}#mermaid-0 .error-text{fill:#080605;stroke:#080605;}#mermaid-0 .edge-thickness-normal{stroke-width:2px;}#mermaid-0 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-0 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-0 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-0 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-0 .marker{fill:#0b0b0b;stroke:#0b0b0b;}#mermaid-0 .marker.cross{stroke:#0b0b0b;}#mermaid-0 svg{font-family:Inter,sans-serif;font-size:18px;}#mermaid-0 .actor{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 text.actor>tspan{fill:#242929;stroke:none;}#mermaid-0 .actor-line{stroke:grey;}#mermaid-0 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#242929;}#mermaid-0 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#242929;}#mermaid-0 #arrowhead path{fill:#242929;stroke:#242929;}#mermaid-0 .sequenceNumber{fill:#f4f4f4;}#mermaid-0 #sequencenumber{fill:#242929;}#mermaid-0 #crosshead path{fill:#242929;stroke:#242929;}#mermaid-0 .messageText{fill:#242929;stroke:none;}#mermaid-0 .labelBox{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .labelText,#mermaid-0 .labelText>tspan{fill:#242929;stroke:none;}#mermaid-0 .loopText,#mermaid-0 .loopText>tspan{fill:#242929;stroke:none;}#mermaid-0 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:#47BCEE;fill:#47BCEE;}#mermaid-0 .note{stroke:hsl(52.6829268293, 60%, 73.9215686275%);fill:#fff5ad;}#mermaid-0 .noteText,#mermaid-0 .noteText>tspan{fill:#333;stroke:none;}#mermaid-0 .activation0{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation1{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation2{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .actorPopupMenu{position:absolute;}#mermaid-0 .actorPopupMenuPanel{position:absolute;fill:#EDFAFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-0 .actor-man line{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .actor-man circle,#mermaid-0 line{stroke:#47BCEE;fill:#EDFAFF;stroke-width:2px;}#mermaid-0 :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}RequesterChannelsResponderSend Request through Channel ADeliver RequestSend Reply through Channel BDeliver ReplyRequesterChannelsResponder\nThe request/reply pattern in AsyncAPI works in the same fashion while supporting all the different sub-patterns. Irrespective of the sub-pattern you would like to represent, the request/reply pattern can be implemented in the AsyncAPI document in the Operation object.\nYou can add the reply info using the Operation Reply object under the Operation object. The reply field represents the response details.\nIn AsyncAPI, you have the flexibility to represent the request/reply pattern in two different ways.\nThe first approach is when the requester specifies at runtime, within the request itself, where the response should be sent. Such an approach allows for the dynamic determination of the reply address based on factors such as the request message payload or header.\nThe second approach is when the requester already knows exactly where the response should be sent. In such cases, the address of the reply channel is directly specified in the AsyncAPI document.\nDynamic response channel\nThere are situations where you do not know the reply channel at the design time. Instead, the reply address is dynamically determined at runtime, based on factors such as the request message payload or header.\nIn the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel.\nFor instance, this pattern allows the replier to direct its response to a specific channel as defined by the requestor. This is typically achieved by including a replyTo property in the request header. The requestor specifies this property to indicate where it expects to receive the response, guiding the communication flow in a structured and predictable manner.\n1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example for a requester with a dynamic reply channel\n5  version: 1.0.0\n6  description: Example with a requester that initiates a request/reply interaction, with the response directed to the destination specified in the request's `replyTo` header.\n7\n8channels:\n9  ping:\n10    address: /ping\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: null\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      address:\n27        description: The response destination is dynamically set according to the `replyTo` field in the request header\n28        location: \"$message.header#/replyTo\"\n29      channel: \n30        $ref: '#/channels/pong'\nMultiple channels with single message when reply address is known\nThe request/reply pattern can also be implemented over multiple channels with a single message. You can do this by specifying multiple channels with a single message and specifying the same address for both the requester and the replier.\nHere's an example of setting up both the requestor and replier over the same address:\n1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example with requester over the same channel\n5  version: 1.0.0\n6  description: Requester example initiating a request-reply interaction, utilizing the same channel for both sending the request and receiving the reply.\n7\n8channels:\n9  ping:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: /\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      channel: \n27        $ref: '#/channels/pong'\nMultiple messages over the same channel when reply address is known\nIn some cases, representing the same information might require a different approach. You can do so by specifying multiple messages under the same channel. In such scenarios, use the messages property in the Operation object to explicitly define which message among the multiple messages available over the same channel is a request and which is a reply.\nConsider an example where multiple messages are transmitted over a single channel, all sharing the same address. In this setup, the Operation object is utilized to distinctly specify which of these messages serves as the request and which functions as the reply:\n1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example when a channel contains multiple messages\n5  version: 1.0.0\n6  description: Requester example that initiates the request-reply pattern within a root channel that contains multiple messages\n7\n8channels:\n9  rootChannel:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14      pong:\n15        $ref: '#/components/messages/pong'\n16\n17operations:\n18  pingRequest:\n19    action: send\n20    channel: \n21      $ref: '#/channels/rootChannel'\n22    messages:\n23      - $ref: \"/components/messages/ping\"\n24    reply:\n25      messages:\n26        - $ref: \"/components/messages/pong\"\n27      channel: \n28        $ref: '#/channels/rootChannel'",
    "sections": [
      {
        "title": "Dynamic response channel",
        "level": 2,
        "text": "There are situations where you do not know the reply channel at the design time. Instead, the reply address is dynamically determined at runtime, based on factors such as the request message payload or header.In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel.For instance, this pattern allows the replier to direct its response to a specific channel as defined by the requestor. This is typically achieved by including a replyTo property in the request header. The requestor specifies this property to indicate where it expects to receive the response, guiding the communication flow in a structured and predictable manner.1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example for a requester with a dynamic reply channel\n5  version: 1.0.0\n6  description: Example with a requester that initiates a request/reply interaction, with the response directed to the destination specified in the request's `replyTo` header.\n7\n8channels:\n9  ping:\n10    address: /ping\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: null\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      address:\n27        description: The response destination is dynamically set according to the `replyTo` field in the request header\n28        location: \"$message.header#/replyTo\"\n29      channel: \n30        $ref: '#/channels/pong'"
      },
      {
        "title": "Multiple channels with single message when reply address is known",
        "level": 2,
        "text": "The request/reply pattern can also be implemented over multiple channels with a single message. You can do this by specifying multiple channels with a single message and specifying the same address for both the requester and the replier.Here's an example of setting up both the requestor and replier over the same address:1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example with requester over the same channel\n5  version: 1.0.0\n6  description: Requester example initiating a request-reply interaction, utilizing the same channel for both sending the request and receiving the reply.\n7\n8channels:\n9  ping:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: /\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      channel: \n27        $ref: '#/channels/pong'"
      },
      {
        "title": "Multiple messages over the same channel when reply address is known",
        "level": 2,
        "text": "In some cases, representing the same information might require a different approach. You can do so by specifying multiple messages under the same channel. In such scenarios, use the messages property in the Operation object to explicitly define which message among the multiple messages available over the same channel is a request and which is a reply.Consider an example where multiple messages are transmitted over a single channel, all sharing the same address. In this setup, the Operation object is utilized to distinctly specify which of these messages serves as the request and which functions as the reply:1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example when a channel contains multiple messages\n5  version: 1.0.0\n6  description: Requester example that initiates the request-reply pattern within a root channel that contains multiple messages\n7\n8channels:\n9  rootChannel:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14      pong:\n15        $ref: '#/components/messages/pong'\n16\n17operations:\n18  pingRequest:\n19    action: send\n20    channel: \n21      $ref: '#/channels/rootChannel'\n22    messages:\n23      - $ref: \"/components/messages/ping\"\n24    reply:\n25      messages:\n26        - $ref: \"/components/messages/pong\"\n27      channel: \n28        $ref: '#/channels/rootChannel'"
      }
    ],
    "svgs": [
      {
        "id": "svg_0",
        "content": "<svg id=\"mermaid-0\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" style=\"max-width: 871px;\" viewBox=\"-50 -10 871 371\" aria-roledescription=\"sequence\"><style>#mermaid-0{font-family:Inter,sans-serif;font-size:18px;fill:#242929;}#mermaid-0 .error-icon{fill:#F7F9FA;}#mermaid-0 .error-text{fill:#080605;stroke:#080605;}#mermaid-0 .edge-thickness-normal{stroke-width:2px;}#mermaid-0 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-0 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-0 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-0 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-0 .marker{fill:#0b0b0b;stroke:#0b0b0b;}#mermaid-0 .marker.cross{stroke:#0b0b0b;}#mermaid-0 svg{font-family:Inter,sans-serif;font-size:18px;}#mermaid-0 .actor{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 text.actor&gt;tspan{fill:#242929;stroke:none;}#mermaid-0 .actor-line{stroke:grey;}#mermaid-0 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#242929;}#mermaid-0 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#242929;}#mermaid-0 #arrowhead path{fill:#242929;stroke:#242929;}#mermaid-0 .sequenceNumber{fill:#f4f4f4;}#mermaid-0 #sequencenumber{fill:#242929;}#mermaid-0 #crosshead path{fill:#242929;stroke:#242929;}#mermaid-0 .messageText{fill:#242929;stroke:none;}#mermaid-0 .labelBox{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .labelText,#mermaid-0 .labelText&gt;tspan{fill:#242929;stroke:none;}#mermaid-0 .loopText,#mermaid-0 .loopText&gt;tspan{fill:#242929;stroke:none;}#mermaid-0 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:#47BCEE;fill:#47BCEE;}#mermaid-0 .note{stroke:hsl(52.6829268293, 60%, 73.9215686275%);fill:#fff5ad;}#mermaid-0 .noteText,#mermaid-0 .noteText&gt;tspan{fill:#333;stroke:none;}#mermaid-0 .activation0{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation1{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation2{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .actorPopupMenu{position:absolute;}#mermaid-0 .actorPopupMenuPanel{position:absolute;fill:#EDFAFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-0 .actor-man line{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .actor-man circle,#mermaid-0 line{stroke:#47BCEE;fill:#EDFAFF;stroke-width:2px;}#mermaid-0 :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}</style><g></g><defs><symbol id=\"computer\" width=\"24\" height=\"24\"><path transform=\"scale(.5)\" d=\"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z\"></path></symbol></defs><defs><symbol id=\"database\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path transform=\"scale(.5)\" d=\"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z\"></path></symbol></defs><defs><symbol id=\"clock\" width=\"24\" height=\"24\"><path transform=\"scale(.5)\" d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z\"></path></symbol></defs><g><line id=\"actor0\" x1=\"75\" y1=\"5\" x2=\"75\" y2=\"305\" class=\"200\" stroke-width=\"0.5px\" stroke=\"#999\"></line><g id=\"root-0\"><rect x=\"0\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"75\" dy=\"0\">Requester</tspan></text></g></g><g><line id=\"actor1\" x1=\"396\" y1=\"5\" x2=\"396\" y2=\"305\" class=\"200\" stroke-width=\"0.5px\" stroke=\"#999\"></line><g id=\"root-1\"><rect x=\"321\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"396\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"396\" dy=\"0\">Channels</tspan></text></g></g><g><line id=\"actor2\" x1=\"696\" y1=\"5\" x2=\"696\" y2=\"305\" class=\"200\" stroke-width=\"0.5px\" stroke=\"#999\"></line><g id=\"root-2\"><rect x=\"621\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"696\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"696\" dy=\"0\">Responder</tspan></text></g></g><defs><marker id=\"arrowhead\" refX=\"9\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\"></path></marker></defs><defs><marker id=\"crosshead\" markerWidth=\"15\" markerHeight=\"8\" orient=\"auto\" refX=\"4\" refY=\"5\"><path fill=\"none\" stroke=\"#000000\" stroke-width=\"1pt\" d=\"M 1,2 L 6,7 M 6,2 L 1,7\" style=\"stroke-dasharray: 0, 0;\"></path></marker></defs><defs><marker id=\"filled-head\" refX=\"18\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"sequencenumber\" refX=\"15\" refY=\"15\" markerWidth=\"60\" markerHeight=\"40\" orient=\"auto\"><circle cx=\"15\" cy=\"15\" r=\"6\"></circle></marker></defs><g><rect x=\"691\" y=\"165\" fill=\"#EDF2AE\" stroke=\"#666\" width=\"10\" height=\"50\" rx=\"0\" ry=\"0\" class=\"activation0\"></rect></g><text x=\"236\" y=\"80\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-size: 16px; font-weight: 400;\">Send Request through Channel A</text><line x1=\"75\" y1=\"115\" x2=\"396\" y2=\"115\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"546\" y=\"130\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-size: 16px; font-weight: 400;\">Deliver Request</text><line x1=\"396\" y1=\"165\" x2=\"696\" y2=\"165\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"544\" y=\"180\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-size: 16px; font-weight: 400;\">Send Reply through Channel B</text><line x1=\"691\" y1=\"215\" x2=\"396\" y2=\"215\" class=\"messageLine1\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"stroke-dasharray: 3, 3; fill: none;\"></line><text x=\"236\" y=\"230\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-size: 16px; font-weight: 400;\">Deliver Reply</text><line x1=\"396\" y1=\"265\" x2=\"75\" y2=\"265\" class=\"messageLine1\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"stroke-dasharray: 3, 3; fill: none;\"></line><g><rect x=\"0\" y=\"285\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"317.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"75\" dy=\"0\">Requester</tspan></text></g><g><rect x=\"321\" y=\"285\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"396\" y=\"317.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"396\" dy=\"0\">Channels</tspan></text></g><g><rect x=\"621\" y=\"285\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"696\" y=\"317.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 16px; font-weight: 400;\"><tspan x=\"696\" dy=\"0\">Responder</tspan></text></g></svg>",
        "context": "#mermaid-0{font-family:Inter,sans-serif;font-size:18px;fill:#242929;}#mermaid-0 .error-icon{fill:#F7F9FA;}#mermaid-0 .error-text{fill:#080605;stroke:#080605;}#mermaid-0 .edge-thickness-normal{stroke-width:2px;}#mermaid-0 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-0 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-0 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-0 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-0 .marker{fill:#0b0b0b;stroke:#0b0b0b;}#mermaid-0 .marker.cross{stroke:#0b0b0b;}#mermaid-0 svg{font-family:Inter,sans-serif;font-size:18px;}#mermaid-0 .actor{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 text.actor>tspan{fill:#242929;stroke:none;}#mermaid-0 .actor-line{stroke:grey;}#mermaid-0 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#242929;}#mermaid-0 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#242929;}#mermaid-0 #arrowhead path{fill:#242929;stroke:#242929;}#mermaid-0 .sequenceNumber{fill:#f4f4f4;}#mermaid-0 #sequencenumber{fill:#242929;}#mermaid-0 #crosshead path{fill:#242929;stroke:#242929;}#mermaid-0 .messageText{fill:#242929;stroke:none;}#mermaid-0 .labelBox{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .labelText,#mermaid-0 .labelText>tspan{fill:#242929;stroke:none;}#mermaid-0 .loopText,#mermaid-0 .loopText>tspan{fill:#242929;stroke:none;}#mermaid-0 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:#47BCEE;fill:#47BCEE;}#mermaid-0 .note{stroke:hsl(52.6829268293, 60%, 73.9215686275%);fill:#fff5ad;}#mermaid-0 .noteText,#mermaid-0 .noteText>tspan{fill:#333;stroke:none;}#mermaid-0 .activation0{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation1{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .activation2{fill:#F4EFFC;stroke:hsl(263.0769230769, 68.4210526316%, 86.2745098039%);}#mermaid-0 .actorPopupMenu{position:absolute;}#mermaid-0 .actorPopupMenuPanel{position:absolute;fill:#EDFAFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-0 .actor-man line{stroke:#47BCEE;fill:#EDFAFF;}#mermaid-0 .actor-man circle,#mermaid-0 line{stroke:#47BCEE;fill:#EDFAFF;stroke-width:2px;}#mermaid-0 :root{--mermaid-font-family:\"trebuchet ms\",verdana,arial,sans-serif;}RequesterChannelsResponderSend Request through Channel ADeliver RequestSend Reply through Channel BDeliver ReplyRequesterChannelsResponder",
        "description": "SVG containing 6 paths, 1 circles, and 7 rectangles."
      },
      {
        "id": "svg_1",
        "content": "<svg class=\"-mt-0.5 inline-block size-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M15.6 2l-1.2 3H5.6L4.4 2C3.629 2 3 2.629 3 3.4v15.2c0 .77.629 1.4 1.399 1.4h11.2c.77 0 1.4-.631 1.4-1.4V3.4C17 2.629 16.369 2 15.6 2zm-2 2l.9-2h-2.181L11.6 0H8.4l-.72 2H5.5l.899 2H13.6z\"></path></svg>",
        "context": "",
        "description": "SVG containing 1 paths, 0 circles, and 0 rectangles."
      },
      {
        "id": "svg_2",
        "content": "<svg class=\"-mt-0.5 inline-block size-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M15.6 2l-1.2 3H5.6L4.4 2C3.629 2 3 2.629 3 3.4v15.2c0 .77.629 1.4 1.399 1.4h11.2c.77 0 1.4-.631 1.4-1.4V3.4C17 2.629 16.369 2 15.6 2zm-2 2l.9-2h-2.181L11.6 0H8.4l-.72 2H5.5l.899 2H13.6z\"></path></svg>",
        "context": "",
        "description": "SVG containing 1 paths, 0 circles, and 0 rectangles."
      },
      {
        "id": "svg_3",
        "content": "<svg class=\"-mt-0.5 inline-block size-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M15.6 2l-1.2 3H5.6L4.4 2C3.629 2 3 2.629 3 3.4v15.2c0 .77.629 1.4 1.399 1.4h11.2c.77 0 1.4-.631 1.4-1.4V3.4C17 2.629 16.369 2 15.6 2zm-2 2l.9-2h-2.181L11.6 0H8.4l-.72 2H5.5l.899 2H13.6z\"></path></svg>",
        "context": "",
        "description": "SVG containing 1 paths, 0 circles, and 0 rectangles."
      }
    ],
    "codeBlocks": [
      {
        "id": "code_0",
        "content": "1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example for a requester with a dynamic reply channel\n5  version: 1.0.0\n6  description: Example with a requester that initiates a request/reply interaction, with the response directed to the destination specified in the request's `replyTo` header.\n7\n8channels:\n9  ping:\n10    address: /ping\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: null\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      address:\n27        description: The response destination is dynamically set according to the `replyTo` field in the request header\n28        location: \"$message.header#/replyTo\"\n29      channel: \n30        $ref: '#/channels/pong'",
        "rawHtml": "<code class=\"mr-8\" style=\"white-space:pre\"><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">1</span><span style=\"color:#64a0dc\">asyncapi:</span><span> </span><span style=\"color:#d8da68\">3.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">2</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">3</span><span style=\"color:#64a0dc\">info:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">4</span><span></span><span style=\"color:#64a0dc\">  title:</span><span> Ping/pong example for a requester with a dynamic reply channel\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">5</span><span></span><span style=\"color:#64a0dc\">  version:</span><span> </span><span style=\"color:#d8da68\">1.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">6</span><span></span><span style=\"color:#64a0dc\">  description:</span><span> Example with a requester that initiates a request/reply interaction, with the response directed to the destination specified in the request</span><span style=\"color:#c0e2a3;font-weight:500\">'s `replyTo` header.\n</span></span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">7</span>\n</span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">8</span>channels:\n</span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">9</span>  ping:\n</span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">10</span>    address: /ping\n</span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">11</span>    messages:\n</span><span style=\"padding-right:2rem;color:#c0e2a3;font-weight:500\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">12</span>      ping:\n</span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">13</span><span style=\"color:#c0e2a3;font-weight:500\">        $ref: '</span><span style=\"color:#5E81AC\">#/components/messages/ping'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">14</span><span></span><span style=\"color:#64a0dc\">  pong:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">15</span><span></span><span style=\"color:#64a0dc\">    address:</span><span> null\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">16</span><span></span><span style=\"color:#64a0dc\">    messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">17</span><span></span><span style=\"color:#64a0dc\">      pong:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">18</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/components/messages/pong'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">19</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">20</span><span style=\"color:#64a0dc\">operations:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">21</span><span></span><span style=\"color:#64a0dc\">  pingRequest:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">22</span><span></span><span style=\"color:#64a0dc\">    action:</span><span> send\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">23</span><span></span><span style=\"color:#64a0dc\">    channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">24</span><span>      $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/ping'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">25</span><span></span><span style=\"color:#64a0dc\">    reply:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">26</span><span></span><span style=\"color:#64a0dc\">      address:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">27</span><span></span><span style=\"color:#64a0dc\">        description:</span><span> The response destination is dynamically set according to the `replyTo` field in the request header\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">28</span><span></span><span style=\"color:#64a0dc\">        location:</span><span> </span><span style=\"color:#c0e2a3;font-weight:500\">\"$message.header#/replyTo\"</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">29</span><span></span><span style=\"color:#64a0dc\">      channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">30</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/pong'</span></span></code>",
        "language": "unknown",
        "context": ""
      },
      {
        "id": "code_1",
        "content": "1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example with requester over the same channel\n5  version: 1.0.0\n6  description: Requester example initiating a request-reply interaction, utilizing the same channel for both sending the request and receiving the reply.\n7\n8channels:\n9  ping:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14  pong:\n15    address: /\n16    messages:\n17      pong:\n18        $ref: '#/components/messages/pong'\n19\n20operations:\n21  pingRequest:\n22    action: send\n23    channel: \n24      $ref: '#/channels/ping'\n25    reply:\n26      channel: \n27        $ref: '#/channels/pong'",
        "rawHtml": "<code class=\"mr-8\" style=\"white-space:pre\"><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">1</span><span style=\"color:#64a0dc\">asyncapi:</span><span> </span><span style=\"color:#d8da68\">3.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">2</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">3</span><span style=\"color:#64a0dc\">info:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">4</span><span></span><span style=\"color:#64a0dc\">  title:</span><span> Ping/pong example with requester over the same channel\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">5</span><span></span><span style=\"color:#64a0dc\">  version:</span><span> </span><span style=\"color:#d8da68\">1.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">6</span><span></span><span style=\"color:#64a0dc\">  description:</span><span> Requester example initiating a request-reply interaction, utilizing the same channel for both sending the request and receiving the reply.\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">7</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">8</span><span style=\"color:#64a0dc\">channels:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">9</span><span></span><span style=\"color:#64a0dc\">  ping:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">10</span><span></span><span style=\"color:#64a0dc\">    address:</span><span> /\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">11</span><span></span><span style=\"color:#64a0dc\">    messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">12</span><span></span><span style=\"color:#64a0dc\">      ping:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">13</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/components/messages/ping'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">14</span><span></span><span style=\"color:#64a0dc\">  pong:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">15</span><span></span><span style=\"color:#64a0dc\">    address:</span><span> /\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">16</span><span></span><span style=\"color:#64a0dc\">    messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">17</span><span></span><span style=\"color:#64a0dc\">      pong:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">18</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/components/messages/pong'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">19</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">20</span><span style=\"color:#64a0dc\">operations:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">21</span><span></span><span style=\"color:#64a0dc\">  pingRequest:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">22</span><span></span><span style=\"color:#64a0dc\">    action:</span><span> send\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">23</span><span></span><span style=\"color:#64a0dc\">    channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">24</span><span>      $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/ping'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">25</span><span></span><span style=\"color:#64a0dc\">    reply:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">26</span><span></span><span style=\"color:#64a0dc\">      channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">27</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/pong'</span></span></code>",
        "language": "unknown",
        "context": ""
      },
      {
        "id": "code_2",
        "content": "1asyncapi: 3.0.0\n2\n3info:\n4  title: Ping/pong example when a channel contains multiple messages\n5  version: 1.0.0\n6  description: Requester example that initiates the request-reply pattern within a root channel that contains multiple messages\n7\n8channels:\n9  rootChannel:\n10    address: /\n11    messages:\n12      ping:\n13        $ref: '#/components/messages/ping'\n14      pong:\n15        $ref: '#/components/messages/pong'\n16\n17operations:\n18  pingRequest:\n19    action: send\n20    channel: \n21      $ref: '#/channels/rootChannel'\n22    messages:\n23      - $ref: \"/components/messages/ping\"\n24    reply:\n25      messages:\n26        - $ref: \"/components/messages/pong\"\n27      channel: \n28        $ref: '#/channels/rootChannel'",
        "rawHtml": "<code class=\"mr-8\" style=\"white-space:pre\"><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">1</span><span style=\"color:#64a0dc\">asyncapi:</span><span> </span><span style=\"color:#d8da68\">3.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">2</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">3</span><span style=\"color:#64a0dc\">info:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">4</span><span></span><span style=\"color:#64a0dc\">  title:</span><span> Ping/pong example when a channel contains multiple messages\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">5</span><span></span><span style=\"color:#64a0dc\">  version:</span><span> </span><span style=\"color:#d8da68\">1.0</span><span style=\"color:#d8da68\">.0</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">6</span><span></span><span style=\"color:#64a0dc\">  description:</span><span> Requester example that initiates the request-reply pattern within a root channel that contains multiple messages\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">7</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">8</span><span style=\"color:#64a0dc\">channels:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">9</span><span></span><span style=\"color:#64a0dc\">  rootChannel:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">10</span><span></span><span style=\"color:#64a0dc\">    address:</span><span> /\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">11</span><span></span><span style=\"color:#64a0dc\">    messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">12</span><span></span><span style=\"color:#64a0dc\">      ping:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">13</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/components/messages/ping'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">14</span><span></span><span style=\"color:#64a0dc\">      pong:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">15</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/components/messages/pong'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">16</span><span></span><span style=\"color:#64a0dc\">\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">17</span><span style=\"color:#64a0dc\">operations:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">18</span><span></span><span style=\"color:#64a0dc\">  pingRequest:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">19</span><span></span><span style=\"color:#64a0dc\">    action:</span><span> send\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">20</span><span></span><span style=\"color:#64a0dc\">    channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">21</span><span>      $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/rootChannel'</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">22</span><span></span><span style=\"color:#64a0dc\">    messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">23</span><span>      - $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">\"/components/messages/ping\"</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">24</span><span></span><span style=\"color:#64a0dc\">    reply:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">25</span><span></span><span style=\"color:#64a0dc\">      messages:</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">26</span><span>        - $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">\"/components/messages/pong\"</span><span>\n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">27</span><span></span><span style=\"color:#64a0dc\">      channel:</span><span> \n</span></span><span style=\"padding-right:2rem\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:2.25em;padding-right:16px;text-align:right;user-select:none;margin-left:16px;background-color:#252f3f;color:#8B9394\">28</span><span>        $ref: </span><span style=\"color:#c0e2a3;font-weight:500\">'#/channels/rootChannel'</span></span></code>",
        "language": "unknown",
        "context": ""
      }
    ],
    "tables": [],
    "highlights": [
      {
        "id": "highlight_0",
        "content": "Operation",
        "context": "The request/reply pattern in AsyncAPI works in the same fashion while supporting all the different sub-patterns. Irrespective of the sub-pattern you would like to represent, the request/reply pattern can be implemented in the AsyncAPI document in the Operation object."
      },
      {
        "id": "highlight_1",
        "content": "Operation Reply",
        "context": "You can add the reply info using the Operation Reply object under the Operation object. The reply field represents the response details."
      },
      {
        "id": "highlight_2",
        "content": "Operation",
        "context": "You can add the reply info using the Operation Reply object under the Operation object. The reply field represents the response details."
      },
      {
        "id": "highlight_3",
        "content": "reply",
        "context": "You can add the reply info using the Operation Reply object under the Operation object. The reply field represents the response details."
      },
      {
        "id": "highlight_4",
        "content": "address",
        "context": "In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel."
      },
      {
        "id": "highlight_5",
        "content": "address",
        "context": "In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel."
      },
      {
        "id": "highlight_6",
        "content": "Operation Reply Address",
        "context": "In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel."
      },
      {
        "id": "highlight_7",
        "content": "Operation Reply Address",
        "context": "In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel."
      },
      {
        "id": "highlight_8",
        "content": "location",
        "context": "In the case where you don't know the address of the reply yet, you have the option to either assign null to the address property or omit the property entirely indicating that the address is not known at the moment. The address property being referred to in this case is part of the channel that the operation with the reply references to. To dynamically specify where the reply should be sent, you can use the Operation Reply Address object. The Operation Reply Address object has a property called location that allows you to define a runtime expression that specifies the address of the reply channel."
      },
      {
        "id": "highlight_9",
        "content": "replyTo",
        "context": "For instance, this pattern allows the replier to direct its response to a specific channel as defined by the requestor. This is typically achieved by including a replyTo property in the request header. The requestor specifies this property to indicate where it expects to receive the response, guiding the communication flow in a structured and predictable manner."
      },
      {
        "id": "highlight_10",
        "content": "messages",
        "context": "In some cases, representing the same information might require a different approach. You can do so by specifying multiple messages under the same channel. In such scenarios, use the messages property in the Operation object to explicitly define which message among the multiple messages available over the same channel is a request and which is a reply."
      },
      {
        "id": "highlight_11",
        "content": "Operation",
        "context": "In some cases, representing the same information might require a different approach. You can do so by specifying multiple messages under the same channel. In such scenarios, use the messages property in the Operation object to explicitly define which message among the multiple messages available over the same channel is a request and which is a reply."
      },
      {
        "id": "highlight_12",
        "content": "Operation",
        "context": "Consider an example where multiple messages are transmitted over a single channel, all sharing the same address. In this setup, the Operation object is utilized to distinctly specify which of these messages serves as the request and which functions as the reply:"
      }
    ]
  }
}